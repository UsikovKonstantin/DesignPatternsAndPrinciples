using _07._ChainOfResponsibility.AbstractHandler;
using _07._ChainOfResponsibility.ConcreteHandlers;

// Цепочка обязанностей (Chain of responsibility)

/*
Цепочка обязанностей (Chain of responsibility) - поведенческий шаблон проектирования, 
	который позволяет избежать жесткой привязки отправителя запроса к получателю. 
	Все возможные обработчики запроса образуют цепочку, а сам запрос перемещается по этой 
	цепочке. Каждый объект в этой цепочке при получении запроса выбирает, либо закончить 
	обработку запроса, либо передать запрос на обработку следующему по цепочке объекту.
	Процесс работы очень похож на middleware.

Когда применяется цепочка обязанностей?
	Когда имеется более одного объекта, который может обработать определенный запрос
	Когда надо передать запрос на выполнение одному из нескольких объект, 
		точно не определяя, какому именно объекту
	Когда набор объектов задается динамически
*/

/*
Программа проверяет гипотезу Коллатца для выбранного числа:
	Если число x - нечетное, то получаем 3 * x + 1.
	Если число x - четное, то получаем x / 2.
Согласно гипотезе, любое положительное целое число, прошедшее данный алгоритм, попадет в единицу.
*/

NumberHandler handler = new OneNumberHandler(new EvenNumberHandler(new OddNumberHandler()));

long number = 27;
while (number != 0)
{
	number = handler.Handle(number);
}
